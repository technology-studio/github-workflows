name: Generate GitHub App token
description: Generate a GitHub App token
author: 'Technology Studio'
inputs:
  app-id:
    description: The GitHub App ID
    required: true
  private-key:
    description: The GitHub App private key
    required: true
outputs:
  token:
    description: The GitHub App token
    value: ${{ steps.sign_jwt.outputs.token }}
runs:
  using: 'composite'
  steps:
    - name: Generate JWT Header and Payload
      id: generate_header_payload
      shell: bash
      run: |
        HEADER=$(echo -n '{"alg":"RS256","typ":"JWT"}' | openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n')
        PAYLOAD=$(echo -n '{"iat":'$(date +%s)',"exp":'$(($(date +%s)+600))',"iss":"${{ inputs.app-id }}"}' | openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n')
        # Combine header and payload
        HEADER_PAYLOAD="${HEADER}.${PAYLOAD}"
        echo "HEADER_PAYLOAD=$HEADER_PAYLOAD" >> $GITHUB_ENV

    - name: Sign JWT with private key
      id: sign_jwt
      shell: bash
      env:
        PRIVATE_KEY: ${{ inputs.private-key }}
      run: |
        echo "${PRIVATE_KEY}" > private-key.pem
        SIGNATURE=$(echo -n "${HEADER_PAYLOAD}" | openssl dgst -sha256 -sign private-key.pem | openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n')
        rm private-key.pem

        JWT="${HEADER_PAYLOAD}.${SIGNATURE}"
        echo "token=$JWT" >> $GITHUB_OUTPUT
