name: Install dependencies (bun)
description: Install dependencies using bun and enable caching
author: 'Technology Studio'
inputs:
  use-cache:
    description: Whether to use the cache
    required: false
    default: 'true'
outputs:
  download-cache-dir:
    description: The bun cache directory
    value: ${{ steps.bun-cache-dir.outputs.dir }}
  download-cache-primary-key:
    description: The cache key used for restoring the bun cache
    value: ${{ steps.cache-restore-bun.outputs.cache-primary-key }}
  node-modules-primary-key:
    description: The cache key used for restoring the node modules
    value: ${{ steps.cache-restore-node-modules.outputs.cache-primary-key }}
runs:
  using: 'composite'
  steps:
    - uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2
      with:
        bun-version-file: ".bun-version"
    - run: echo "dir=$(bun pm cache)" >> $GITHUB_OUTPUT
      shell: bash
      id: bun-cache-dir
    - uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      if: inputs.use-cache == 'true'
      id: cache-restore-bun
      with:
        path: ${{ steps.bun-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-bun-
    - uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      if: inputs.use-cache == 'true'
      id: cache-restore-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-
    - run: bun install --frozen-lockfile
      shell: bash
