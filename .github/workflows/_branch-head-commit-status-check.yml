name: "Branch Head Commit Status Check"

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      check-status-context-pattern:
        required: true
        description: Regex pattern of the check status context name
        type: string
      pr-number:
        required: true
        type: number
    
permissions:
  issues: read
  pull-requests: read
  statuses: read

jobs:
  main:
    name: Check head commit status
    runs-on: ubuntu-latest
    outputs:
      hotfix: ${{ steps.pr_labels.outputs.hotfix }}
    steps:
      - name: Fetch PR labels
        id: pr_labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LABELS=$(curl -s \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels" | jq -r '.[] | .name')
          echo "PR Labels: $LABELS"

          # Check if 'hotfix' label is present and write to file
          if echo "$LABELS" | grep -q 'hotfix'; then
            echo "hotfix=true" >> $GITHUB_OUTPUT
          else
            echo "hotfix=false" >> $GITHUB_OUTPUT
          fi

      - name: Fetch status of head commit on ${{ inputs.branch }}
        if: steps.pr_labels.outputs.hotfix != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::debug::PR Number: ${{ inputs.pr-number }}"
          echo "::debug::Branch: ${{ inputs.branch }}"
          echo "::debug::Check Status Context Pattern: ${{ inputs.check-status-context-pattern }}"
          STATUSES=$(curl -s \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ inputs.branch }}/statuses")

          FILTERED_STATUSES=$(echo "$STATUSES" | jq -r '.[] | select(.context | test("${{ inputs.check-status-context-pattern }}")) | .state')
          echo "Filtered Statuses: $FILTERED_STATUSES"

          # Check if any filtered status is pending or failure
          if echo "$FILTERED_STATUSES" | grep -qE "pending|failure"; then
            echo "Failing the workflow as a commit status on ${{ inputs.branch }} is pending or failure."
            exit 1
          else
            echo "Succeeding the workflow. All filtered commit statuses on ${{ inputs.branch }} are successful."
            exit 0
          fi
