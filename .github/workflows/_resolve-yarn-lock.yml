name: Resolve yarn.lock

on:
  workflow_call:
    inputs:
      pr_number:
        required: true
        type: number
      repo:
        required: true
        type: string
    secrets:
      TXO_GITHUB_BOT_APP_ID:
        required: true
      TXO_GITHUB_BOT_APP_PRIVATE_KEY:
        required: true

jobs:
  resolve-yarn-lock:
    name: "/"
    runs-on: ubuntu-latest
    steps:
      - uses: technology-studio/github-workflows/.github/actions/github-app-token-generator@main
        id: get-token
        with:
          app-id: ${{ secrets.TXO_GITHUB_BOT_APP_ID }}
          private-key: ${{ secrets.TXO_GITHUB_BOT_APP_PRIVATE_KEY }}
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          token: ${{ steps.get-token.outputs.token }}
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4
        with:
          node-version-file: '.nvmrc'

      - name: Get PR branch names
        env:
          REPO: ${{ inputs.repo }}
          PR_NO: ${{ inputs.pr_number }}
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "HEAD_BRANCH=$(gh pr view $PR_NO --repo $REPO --json headRefName --jq '.headRefName')" >> $GITHUB_ENV
          echo "BASE_BRANCH=$(gh pr view $PR_NO --repo $REPO --json baseRefName --jq '.baseRefName')" >> $GITHUB_ENV

      - name: Fetch all commits from PR and base branches
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/${{ env.HEAD_BRANCH }}:refs/remotes/origin/${{ env.HEAD_BRANCH }}
          git fetch --no-tags --prune --deepen=999999 origin +refs/heads/${{ env.HEAD_BRANCH }}:refs/remotes/origin/${{ env.HEAD_BRANCH }}
          git fetch --no-tags --prune --depth=1 origin +refs/heads/${{ env.BASE_BRANCH }}:refs/remotes/origin/${{ env.BASE_BRANCH }}
          git fetch --no-tags --prune --deepen=999999 origin +refs/heads/${{ env.BASE_BRANCH }}:refs/remotes/origin/${{ env.BASE_BRANCH }}


      - name: Checkout PR branch and merge base branch
        run: |
          git config --global user.email "txo-github-bot[bot]@users.noreply.github.com"
          git config --global user.name "TXO GitHub Bot[bot]"
          git checkout ${{ env.HEAD_BRANCH }}
          git merge origin/${{ env.BASE_BRANCH }} || true

      - name: Check for merge conflict on yarn.lock file
        run: |
          YARN_LOCK_HAS_CONFLICTS=$(git ls-files -u | grep yarn.lock | wc -l)
          echo "YARN_LOCK_HAS_CONFLICTS=$YARN_LOCK_HAS_CONFLICTS" >> $GITHUB_ENV

      - name: Run yarn install to resolve conflicts automatically
        if: env.YARN_LOCK_HAS_CONFLICTS > 0
        run: |
          yarn install
      
      - name: Commit yarn.lock
        run: |
          git add yarn.lock
          git commit -m "chore: resolve yarn.lock"
      
      - name: Push yarn.lock
        run: |
          git push
