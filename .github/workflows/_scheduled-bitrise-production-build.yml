name: "Scheduled Bitrise Production Build"

on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string
        default: main
    secrets:
      BITRISE_API_TOKEN:
        required: true
      BITRISE_APP_SLUG:
        required: true
      BITRISE_PRODUCTION_BUILD_PIPELINE_SLUG:
        required: true

jobs:
  scheduled-bitrise-production-build:
    name: Scheduled Bitrise Production Build
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install jq

      - name: Get latest passing commit SHA
        id: get-commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          BRANCH_NAME: ${{ inputs.branch_name }}
        run: |
          LATEST_PASSING_COMMIT=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/commits?sha=$BRANCH_NAME" | \
            jq -r '.[] | select(.commit.status == "success") | .sha' | head -n 1)

          if [ -z "$LATEST_PASSING_COMMIT" ]; then
            echo "No passing commit found. Exiting."
            exit 1
          fi

          echo "Latest passing commit: $LATEST_PASSING_COMMIT"
          echo "commit=$LATEST_PASSING_COMMIT" >> $GITHUB_OUTPUT

      - name: Trigger Bitrise production Build
        env:
          BITRISE_API_TOKEN: ${{ secrets.BITRISE_API_TOKEN }}
          BITRISE_APP_SLUG: ${{ secrets.BITRISE_APP_SLUG }}
          BITRISE_PRODUCTION_BUILD_PIPELINE_SLUG: ${{ secrets.BITRISE_PRODUCTION_BUILD_PIPELINE_SLUG }}
          BRANCH_NAME: ${{ inputs.branch_name }}
        run: |
          RESPONSE=$(curl -s -X POST \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -H "Authorization: $BITRISE_API_TOKEN" \
            "https://api.bitrise.io/v0.1/apps/$BITRISE_APP_SLUG/builds" \
            -d '{
              "build_params": {
                "branch": "'"$BRANCH_NAME"'",
                "pipeline_id": "'"$BITRISE_PRODUCTION_BUILD_PIPELINE_SLUG"'",
                "commit_hash": "'"$LATEST_PASSING_COMMIT"'"
              },
              "hook_info": {
                "type": "bitrise"
              }
            }')

          BUILD_SLUG=$(echo $RESPONSE | jq -r '.build_slug')
          BUILD_URL=$(echo $RESPONSE | jq -r '.build_url')

          if [ -z "$BUILD_SLUG" ] || [ "$BUILD_SLUG" = "null" ]; then
            echo "Failed to trigger Bitrise build. Response: $RESPONSE"
            exit 1
          fi

          echo "Bitrise build triggered. Build slug: $BUILD_SLUG"
          echo "Build URL: $BUILD_URL"
